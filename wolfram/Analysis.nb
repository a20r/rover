(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     22886,        482]
NotebookOptionsPosition[     22328,        458]
NotebookOutlinePosition[     22683,        474]
CellTagsIndexPosition[     22640,        471]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"sqHeight", " ", "=", " ", "90"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqStd", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minHeight", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxHeight", " ", "=", " ", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rk", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SQ", "[", "z_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"sqHeight", ",", " ", "sqStd"}], "]"}], ",", " ", "z"}], "]"}],
     " ", "/", " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"sqHeight", ",", " ", "sqStd"}], "]"}], ",", " ", "sqHeight"}],
      "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"z_", ",", " ", "r_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"rk", " ", "*", " ", "r"}]}], "]"}], ",", " ", "z"}], "]"}], 
    " ", "/", " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"rk", " ", "*", " ", "r"}]}], "]"}], ",", " ", "minHeight"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SQ", "[", "z", "]"}], "-", " ", 
       RowBox[{"R", "[", 
        RowBox[{"z", ",", " ", "r"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "minHeight", ",", "maxHeight"}], "}"}]}], "]"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"r", ",", " ", "0.01", ",", " ", "1"}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->CompressedData["
1:eJwdzlsoQwEABuATSlouK8rDmttiDybNzhDWXMqleFiUWjuzuY6JuRS5JjFM
IWqmViSxNbnEWmEaRSwPvOxBK2tYYiVCKTn/efj7+ut/+JPUHbLGEIIgkuhA
X2ITL+vppXBQsSSAvuRAIXS/80thsChaDrVVPAouXL71wZj8tQG4fZxrFNGO
2sgVuCG42oIqkYfxRsc+gqnGSsbOYraApC372yShXiI3w2rZ6joU+qw70PN7
vAcz6nrtkBvBcUJvnv8C2u6DAbg1+fwKXVT6Bzwb+WSL0VlcLpRqW9PgJrHL
eHKfQmVj1yBRwjlvaD10myZa4XiOoBsG2AcjMOj8Ls/Bz6+ECti5GKKGtbMZ
jLFj+82wIPKhHWr8+zr4Zmnpgka9vR9yqLYhOOj90UNLqHQK3lWxXPn4J3Jf
Qwd/OrOA9vmWFMOo65I8GH/wWAM1JgcFDZ4wJRQScfVwghAz+vy7bfDHUdMD
rfKZYXjep5qEPMWhAS6b0+fh2qUyXEJ7quyKgf/oQhlq
  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`r$$], 0.01, 1}}, Typeset`size$$ = {
    360., {107., 111.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`r$191689$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`r$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`r$$, $CellContext`r$191689$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`SQ[$CellContext`z] - $CellContext`R[$CellContext`z, \
$CellContext`r$$]}, {$CellContext`z, $CellContext`minHeight, \
$CellContext`maxHeight}], "Specifications" :> {{$CellContext`r$$, 0.01, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {151., 156.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.610373019493814*^9, 3.610373027027295*^9}, {
  3.6103731107987413`*^9, 3.610373179414507*^9}, {3.6103732237721767`*^9, 
  3.610373257827311*^9}, {3.610374217392082*^9, 3.61037426823808*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.610372428712949*^9, 3.610372430475603*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.610356916547061*^9, 3.6103569303473053`*^9}, {
  3.610356966539935*^9, 3.610356967273733*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rdata", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<~/Documents/Projects/rover/sandbox/all.txt\>\"", ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", "rdata", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Area Coverage\>\"", ",", " ", "\"\<Sensor Quality\>\"", ",", " ", 
       "\"\<Risk\>\""}], "}"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.610360917271448*^9, 3.610360917767599*^9}, {
   3.610360984667016*^9, 3.610361047784194*^9}, {3.6103610864004707`*^9, 
   3.610361089728271*^9}, {3.610361151159659*^9, 3.6103611778549423`*^9}, {
   3.610361310810293*^9, 3.610361341763769*^9}, {3.610361387924075*^9, 
   3.6103615103322153`*^9}, {3.610361544188249*^9, 3.610361601205268*^9}, {
   3.610361638615992*^9, 3.610361642246334*^9}, {3.610361694241848*^9, 
   3.6103617214097137`*^9}, {3.61036177034769*^9, 3.610361840033471*^9}, 
   3.610361958797518*^9, {3.610361992104024*^9, 3.610362008671481*^9}, {
   3.6103620443588448`*^9, 3.610362106300569*^9}, {3.61036215629709*^9, 
   3.610362195728208*^9}, {3.6103622762357197`*^9, 3.6103622954691257`*^9}, {
   3.610362363782147*^9, 3.610362370973961*^9}, {3.610362440921358*^9, 
   3.61036244285305*^9}, 3.610362483109865*^9, {3.610362567984358*^9, 
   3.610362650262039*^9}, {3.610363125113845*^9, 3.610363125968452*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       RGBColor[0.24720000000000014`, 0.24, 0.6], 
       PointBox[CompressedData["
1:eJw9lgs41Okex3WTS8K2FVqaUC5ZUUoq9c39zozLuAwzBjPMDPZS0sbZqXSv
dUqlRCyFs6LWpdqEsa20tWxxSiq3okVppfZ0OWdr9zz7/tbzeDwf3/n+v+/v
93v/7zsLxKm8hMlqampv//z9/9+/fsbXbXvYeqz+qHId+wcKr+Wcki/KZqyB
F85m+kbNRxnr4bSOzdOZ7UWMP4RRmr1doayUsQEsWnhGY0cqGH+EPdsdGhJc
vmHMwWRDG+fzjTWMTTHvi0vlkw3rGJvDfa4tV3TuIuNF8Igz2fT8YQNjS1zz
N6sV16gYW+P76qVGH5wg3QahcqHsg4NXGNvi/ffVWU8ULYztEGWpLWtzucbY
Hn5ZhzW/tGplvBTR6Vc0bY7+yHgZstNSDp+3uc7YAUFZDzpT8tsZL4eRqanh
aOVNxivQlpbuvzf+FmNHTCkX9W4808F4JdruvpB27ybdCRYOgZwjbaSvwtwa
+727PDoZr4Ybt6Gv5fS/Ga/Bq6Hm0otzuhg7o+U/8w6dqyReiw37ptrHl3Qz
XodFP+0vChgkBuJuLXvZeOLeX6wEDLdtvnOl/D7T1+PM4m26Pqk9TF+PfYuf
1Mtye5nuAtXt345Pr2OsdMEhl/VnjrsMMN0VC/mXLkwtY6x0RfP+bq+W5Q+Z
7gZhUEXuxbWPmO4GP1cVzzGCsZo7ZnTmT3PoJt0dfZdvL2y1H2K6B1rnSLl3
dzFWeqBkft8S7feke0JrqvEb7dzHTPeENP/e/2qcfmG6F5Ymz0jmcxkrvTDb
ynR/8bphpnsjkT9oOH6WsdIbxqN7U599RboPOmZxnO0byO+DlF+aXft7SPeF
4XBMsHsx+X2hvbPhJ83HpPthU6lK/bCKdD8clJSvrh4g3R8Pspt0Jg+R7g/Z
dwtTt/4+wvQAZNyLeaLtOMr0AIzLO1oeH2CsFog3p7J2Wx9gn1cGYn1rj4W+
MelBGL5bP0nxNWMEwWK3/Gqe8An7fBC2jziZbxUwVgVhdUmCSLDhKfNzobvb
jHfkMmNwIb5x3132irGSi4qXdZ+9dWOs4uLSss8Td75nz1Pjwbz7mbfgIGPw
4O2SbPryO8rn4TT3c9vvXMjPQ5uRx9MWPuUH42Ceq/WJEsoPxp1my4DgnZQf
jJvXS24XjJI/GOoGnLc7e8kfgmru9NS6f5E/BKmTfM3NrMaYPwQtgi2F730Z
q0Kw6uCjrMF+8odipd0jR3E60xGKrzMu1J21IH8oPM1jx32llB+KvLOZ/gUr
ma4WhgxT2bCdNvnDIIxw4lmO0PrD0PXrWNXv+pQfhmcZX9/3nEb5fEhCHHQ9
dGn9fGQJr06MtlH/+BBOpHWGO1M+H8eXNnc/CCR/OIbdhbdsllL/w3FI46aL
bRP5w/EsMH+i4jjNPxwxL3bUPtQmfwTiFlZMOn2Y8iMg8AxONlGj9Udgckx6
/eAI+SMgtJqic5HqU4uExpZHppciyB+JKVYzt710JX8kivuvrVDQflFFYusC
8926c8gfhdmvZoxpFJA/CrlbaufWUj+UUTh04eZ+zmOqPwpl7s3HK/yo/wL8
vKa09mkY9V+APdYz0zeuovkJIDfg6P/QRX4BDkwbMMwOovxoSHKPVV7jUn40
qjgiafEJyo9GVlPmN4/3kz8a/u1ximtt5I9BekiH+9RH5I9B9oilpdOnlB+D
cVH7+TnONP8YVJ4VLDEopPULIXb5p93WB7R+IYZeaZvc8iS/EAayN+459uQX
4tetabUZWuQXoStkuv8cmgdHhFJ+CjfKkJ4nQu+5la11LUwXibBH/XmrZiY9
X4Sa8hX/jclmXCRCbIimCV9BeSIcU7e4c+9jxv0iNGrc9fZOpfpjkTP/QcBg
L5svJxY96sU7pO10HsWiYFint9yL8mMhmIgeCGmn/sbC5HzjBkEM46JYbNXa
tDZvAeXHYjRnjYKznPJj8SLvefZqmqeaGJs1rE24i5jOEWP7RElBwVuahxh6
hy0Eq6h/IjHMujaKPpxC9YtxuK863N6L6hcjfVZumVk3zVuMfu7rn/B3vhih
H/QIh2m/q8XhstbsDZxBqj8O4Y37TA1+ofcxDn0bOk8knmEsikOP056Mt3T+
KuOg26pTWk3vY1Ec9D7SmyWk81AVh3Oc0TN6kYz7/8xba79EN5zO33hMLHvl
0/sp5cdDs/ZIv/12yo9HwA5H46u0PlE8lmWMt96xpfMhHvl6DgOjHWxeRfFw
fpCnn1nAWBWPxQ7hLXO92ef74+E+NGIW9pjyE/CSt1E9fRflJ6Bp1DpK6EP5
CSjr8nezt6P5J6DqhVfF8luUn4BbfpudntlS/Qm40fnqvt4Mqj8Buqc1dDXz
qf4ELCx7d7IjjfovwfIc4+NhhbT/JXBOi6kwrab5S2C+46MFO49SvgTKQJ2W
xr/3nwSed25cH9xC+RLMj3DLbwygfAn4i337hul+65fgd59OJecm1S9FQ0vj
9yH6lC9Ff/N739cfU74Ue0ercuaYUr4UvHcb2+s1qH4p4qTcb52GqP9SzM//
QveTOuq/FCk2v01qvcq4XwrHmfty46vp/k9E/IqPF5hkMeYkYkGgKmt6IfU/
EaGNs1+a9jJdlAi3znv6lQmUnwhzrTqXdx6MixLhG5QlsfqEzutEGJ97uLb4
PNWfiCufDWz4tYrqT8KamVUia2JOElx54Z+fTaL3PwnX80LDY7po/yXhKZ/n
FX6A8pOw47aaemoJ5Sfh/lc71i/2p/wk6NSdnVgymfKT4FVjF6HtTPkyrBEY
SWZEUL4M22fLEzWcqP8y1I+dzAt5R/kybGm8XHKsk/JlaJrvaBagRfOXYeH9
9ENflVO+DMPJp5rDttP+k6Hm25KyoX7Kl8NsbdVUSR/ly9FYdsWxn+qFHJXG
lyecxyhfjr6CNmPPk5QvR87BQ8+/pPOhSI6KeO8LbbmUL4c8QvqC/yPVL0du
ndq8Mj3a/woskhnkNx2g/adAVPTSb3fR/QYFGvjOmUIV7T8FLJu4M3j0vigV
8KrjXVy0iepXIPaHWTfTx2n/KxD2xfvKFXZ0/imQuXnMIp1D908yeM8z/W7Q
fchJxoC+kXOPC90/yYi29Ft/Skz5yXh0crPXZvo+o0yGTXFNxZ4Oqj8ZGfm7
3xWKqP4/2af42I2dtP+T8cOPPtGxi6n+FKhwRSuK+sNJQcO8n+cqP6H6U1A0
66Tth6WUnwIPToTGyN/nfwqOvPGrejKNzv8UvP6HlkO9E90/KbgXmP6lP32/
60/BBZWhSP8Y5afinJWsZD6dt5xUeEa6Z3yTQ/NPRWlk1GvukSfr/gAT0dyk

        "]]}, {
       RGBColor[0.6, 0.24, 0.4428931686004542], 
       PointBox[CompressedData["
1:eJw9lgdUlNcWhcdCFDUaFAQDEQSDAZVQBERBNkJAbBRpUmeAGcrQm4FnmSga
LJHECIooJQZ8ohhjI1gnoNEVggQR0WUDpCnRSBEE4/Px1vu3rsVyfRz23eec
e8+9/6zQeE/paJFINDzy87/////vpf15x4GP/tH6y174BXojouzPx/0t8HiY
+/p+kN5D/gj3W6/Mnl9PVsdP2of3KlzIWvjdPOTazJAXAutAlJK85KXec4H1
UHXTs/37km6B9aFzvmBjeNkzgWdjolFqwKGVZEOsVFhbHdIgf4aX3QeuPzn8
VGBjfFf+uYbrMvI83PBOfGnV2iWwCSaEbDFqzCSbotrFO3/aRLIZbp+d6/VH
dqfA5vhVXrL/HcgWqL/U4KsYTV6Aj9uyTJ+1dQhsia6Gsqs198hW+MHUPen5
NP69Ne7kHi1IDyQvhN8ml1HpJ8g2sJraOa+6hbwIdj2NKScGyItR3Jui9Usf
2Ravgg0HH75nO9Rl2wxtVWE9S6BZWL2ozo1sjwftUxqsD5MB1acFWUk3BVYA
Jc/H19mqs38OwL4dxYq5AiscIPuwSeuBHuNLoZyz9cxWfcaXIlfL98y1qYw7
Qr54ZfqGTxh3RP5bFDSaMe6Ei3d+Es95RX8nbFaYJ5w7xvy+QGtQcecUKeNf
IGTLrh39Exh3xv2qFN2Ke0L9CmfcHHsko62U/XDB5qF1GvmbGXeBz/wTHX9v
YHwZLDamJ4xfw/gyHPxT+c0jY8ZdoZNhvuGTnYy7ojLvtlnW+/1YjtDsPNdx
2cxvOXZ/neas2sz8VkC518RQr4nxFVjZ8Fe5E+sVrYR+avaXKibsz0rs3llj
d8qI/VmFUs8iub0K46vQL9qy/9Vd6lfjkEd+t9Zprr8ag0ccr6XnM+6GM8UN
h/bFMO6G6AWNuf8KYdwdpQ2J95tsBIY7tqbV+bx9xHrdMVTq7nY8S2ClO2wO
KaZnfc36PTCje9jYZb3A8MDc3ormkgzqPRDZ8bq+O5N6DwSPqa7aeJF6T7hq
SPSuO9DfE3krdqpUZjFfT5S8cbugy/4qPXE5arRGWSTzX4OLw8Va8xKoX4Po
3A0VaWuoXwPb7FO2jq7Ur4FJ7lgXDa4n8sKB2uHWA6eo94L/0te5utHUe8Hz
t7bz3ibUe6FUOTvn4TTqvSEbSPzNeTT13kiwLb9hOIN6b3xT265WoEe9N/Rv
rB3obGL9PnCfZOYRfJn984GNpK0paj/75wO3dN0DxgfZPx8ktPtoflVJvS++
N5w/N/YK9b7YUXbf8i3vM4UvCmbkVjsH0t8XkzpTBttuMX8/hHptawvRFc4X
/DB4o86/fxbPmx98tFUs7SYLrPTD7UfyRbN+pX4tXhqcmtMYzvrXwm3mY0el
Of3XYrL5VOue18x/Lbp2zsnsn0W9P1SlR0/+6ES9Pyqrgp1XrKPeH2XX0sSW
nBelP+JS07xLx3M+AnBFPfnTB79RH4BuA4lpbAb1AZAtnqC/nvkoA3A354ib
2m32LxB2d2pel+1i/wIhHUpKHOZ5VwQisWk4zKaK+QdiykDF/DELmX8QYiZa
TP9qN/2DkND/w5lZMvoHIc75l6dxdvQPQkdQafI9nhdRMHxyrH/8o53+wdD6
cuB5xjX6B8Ou9t6bFN5nymAEH+/2zT7K/EPwTv0/KZ6cR4RArUe9P8iX+hBc
vqcSurya+hAUtF622PL+PRDDM0snRztFYD0x1B6n+xWsYD1iFPkUTy2wFFgs
xmDNwpNdg1xfjJBVyzPu5gtcJEaJuqqRNIh+Yox9fctzz02Bm8Xoi0zpPBNP
fwnEmWMrv+2ivwTVv0ifPQHPowRucxZ4z35JfwniS68bOxWzvxIUuj8OaVgs
cJEE9S3p5hsXsN8StGg/fRcwXuBmCa7uTOtLfj8/oQhoUTVs2SawXih0Tv+8
fnMh+xmKTe5+nZMeCiwOxaq2sllLPqV/KGQO/+4t9KZ/KD7+LuH6hWX0D0Vb
3buhtavpH4qdl+TlY46z/jAcD55wy2KSUK9eGDaFqFfuXcj6w6Bsf9ZhqCmw
OAy98l1/iHm/K8JQOuHQxQtP2f8wfLa40PB8HvsfhqojgVbTvmX/wxDqf1o3
ifeJKBztt658ZtvB+sMRNtkmXqHP/Q/Hf45OTIqRs//hUF6QYQHvD0U4+uzX
T67VFvIrCkfK2Rd5v6vxvgiHS82bt69rWH84LD1S3c9tY/1SnJ2SMO+VC/df
inqzuwcX69BfipZjbw8WatJ/hC0+yotTp78UTeX6W8J4XoukaOvoGKVRxP5L
saGiNjmf3zvNUkg0XFef53sjksFD/46T4yj6yzDNQdcgq4H7L8Mpk1XOvj3c
fxkKV2eqfMz7SiHDq5BPxrWup78MabUOhcZ8b5UypMZNfDPEeWuWIckld2jj
WPpH4DvpmPjt/J7Ri4Bxn8GoXjPWH4EC3V3GwXyfxRE42bW9ZI0P/SOwzetV
5BDnqSgCD8ZFTFlEVkZA9fgVC1EE/SPgdrGjIHYz/SOx7o6bqWwP/SPRN87m
UtQW+kdiMHPOn5U8r+JIbL96cvoLsiISxzTPpgYE0D8Sm4wqTtT38/yNrDd9
22ZRHc9fJKzr+pet436KonB8c/KwL/dPLwq5GwYMdnM9RKFB+U/fcr7n4ijM
nvnWU5XzpIjCGLWvUj/3o38UWqwyjyXz/VBGQbW4fJsL820eWU9mabeng/7R
MOoNVCuto380vr6ZV9NXTv9o9CQ8PjApl/7RWHD6hWnpfvpHY/rzsBJbvjdF
0ViUoz3aJo3+I/odObXdefSPRrmmyf62FvrLsWwg8wlsOf9yWBn+GVHvx/mX
4wdvg08NVnD+5VAdc87tliPfZznsRouCmr05f3I8ugSnHA/OnxxtAXXlhfz+
bpZjzCIzlZIP+X7G4Nx51a4kfm/rxSBxv62mdhzrj4HXnvC/AyWsPwamRZP7
ioxY/0h8ZoVTZSPvnxi0RhuYVRVw/2OQMWuP/+xc7n8MdiTm75tAFsXiL9P4
pZMu8P6JRdYCy5vTeT4QC5WtAb8f5veLOBZi7w83NiroH4ueL1zO/byX/Y/F
3s+flT88wv7HwnfHDvmMF+x/LK76Tds3+mf2Pw41Pjp9SUtYfxwKpXcrX3Rz
/uNgei1a/811zn8cjrVUXLcu4/sXh3/CjP0ijrH+OASs6zE9W8L6R9Y7eMEh
NYf1xyF5ssTEmO+JKB5aOdbtkg30j4dy/gdO25+w/njof+DQt97uqf1/AYkx
9V4=
        "]]}, {
       RGBColor[0.6, 0.5470136627990908, 0.24], 
       PointBox[CompressedData["
1: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
cNQotiqoov6LxBVbk6QVW5heGYmpMln97mKqfySmVEfNtTOg+kdiY6zHQVUI
zX8UGi6eqfWjfc2Jgvmf3Rc5RWQ/Ck/yOgeDvif7UejJj3bR/pbsR8G43TX/
03aKPwpzKs8ZLrxJ9qNgMalVYTaL7EfBq0CRsVhC+Rcj4JGjLvcVY474vb+d
aWmGVH8xqu9yzPR0qP7veduMf7aHU/+Jod0UdriES/GLccjJ6ElbKfWfGE9L
Ln9y4xHNnxj6wocnrZMo/mjkFMirI7XIfjQWXzqtOVZG8UejcI7PmiBd9n5e
NN68jNfOvkHfp2joPC1uHkpl/iijseP45X47X9aPqmjcyDb99NJCtk/U79/X
MDpUPcJYQwJvZbfn5CzGHAkUj3mN+mdp/iTYmqwRalpA8Utwm1vosXMxxS/B
uy3fe/ECKH4JXjb8qWn5N+VfAnePiLx3Qup/CfrGXJjH/XA/k+KQXvLYnxfQ
/pPiu3t9Gy7SvEMKZab1Zkkhzb8UXo2vVihoP6RIUVeZEz+N4lNKcblUdCkm
hLFKiuYvLlyVJ7Pn1VK8iZ7XfX4x3S9l0DpSrHNqKu0fGRaXOSVmD1D+ZdAe
Cmp+lkP9J8Ph8h/Sl/5F8yfD/oma3HAB7V8Z4gdzj1u40f6XodL9pdJexlgt
Q08D16Trw/6VI0+neuf8nxhz5BjMVd21LKP5lyOptzI5OY3mX47mnHqrnQrq
fzms7VuNAjMp/3LEtt6f/MCT5l8OH1t+Vn8axS/HBF9Tc60Oyn8MbjcabHMa
R/Mfg8y6hHT9YLqPxODnI/XuFQfo+xeD9q9U3nt+oe9zDJLk4tTwcsbKGPia
uNmvt6TvTwziSyyq/COo/2NQGqHnEJdF/R+Lz7uK8eF+w4nFxUNHDi65TPWP
Rf2R3lUPDOsd/wsCAOCo
        "]]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, 
    PlotRange -> {{0, 250.}, {0, 0.99822665442}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {{5., 5.}, {0.019964533088400002`, 
     0.019964533088400002`}}],
   TemplateBox[{"\"Area Coverage\"", "\"Sensor Quality\"", "\"Risk\""}, 
    "SwatchLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Directive[
                   EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                   RGBColor[0.6, 0.24, 0.4428931686004542]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                   RGBColor[0.6, 0.5470136627990908, 0.24]], 
                  RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {10, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.61036206291812*^9, 3.610362093784131*^9}, 
   3.6103621973437243`*^9, {3.610362285940433*^9, 3.6103623226630898`*^9}, 
   3.610362379164608*^9, {3.610362463727808*^9, 3.6103624858379927`*^9}, {
   3.610362603750894*^9, 3.6103626506873817`*^9}, 3.610363126537692*^9, 
   3.610363396602751*^9, 3.610365124742332*^9, 3.610365190819763*^9, 
   3.610372460831727*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6103610349921417`*^9, 3.6103610358166933`*^9}}]
},
WindowSize->{1275, 756},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 2503, 67, 148, "Input"],
Cell[3085, 91, 1804, 35, 324, "Output"]
}, Open  ]],
Cell[4904, 129, 92, 1, 28, "Input"],
Cell[4999, 132, 143, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[5167, 138, 1690, 33, 80, "Input"],
Cell[6860, 173, 15353, 279, 244, "Output"]
}, Open  ]],
Cell[22228, 455, 96, 1, 28, "Input"]
}
]
*)

(* End of internal cache information *)
